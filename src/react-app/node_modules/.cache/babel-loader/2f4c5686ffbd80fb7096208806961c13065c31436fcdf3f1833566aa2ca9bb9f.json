{"ast":null,"code":"import { Credentials } from \"./Credentials.mjs\";\nexport class CredentialProvider {\n  constructor({\n    accessKey,\n    secretKey,\n    sessionToken\n  }) {\n    this.credentials = new Credentials({\n      accessKey,\n      secretKey,\n      sessionToken\n    });\n  }\n  async getCredentials() {\n    return this.credentials.get();\n  }\n  setCredentials(credentials) {\n    if (credentials instanceof Credentials) {\n      this.credentials = credentials;\n    } else {\n      throw new Error('Unable to set Credentials. it should be an instance of Credentials class');\n    }\n  }\n  setAccessKey(accessKey) {\n    this.credentials.setAccessKey(accessKey);\n  }\n  getAccessKey() {\n    return this.credentials.getAccessKey();\n  }\n  setSecretKey(secretKey) {\n    this.credentials.setSecretKey(secretKey);\n  }\n  getSecretKey() {\n    return this.credentials.getSecretKey();\n  }\n  setSessionToken(sessionToken) {\n    this.credentials.setSessionToken(sessionToken);\n  }\n  getSessionToken() {\n    return this.credentials.getSessionToken();\n  }\n}\n\n// deprecated default export, please use named exports.\n// keep for backward compatibility.\n// eslint-disable-next-line import/no-default-export\nexport default CredentialProvider;","map":{"version":3,"names":["Credentials","CredentialProvider","constructor","accessKey","secretKey","sessionToken","credentials","getCredentials","get","setCredentials","Error","setAccessKey","getAccessKey","setSecretKey","getSecretKey","setSessionToken","getSessionToken"],"sources":["/Users/admin/Documents/analytical_engineering/Docker_Analytics_Sandbox/src/react-app/node_modules/minio/dist/esm/CredentialProvider.ts"],"sourcesContent":["import { Credentials } from './Credentials.ts'\n\nexport class CredentialProvider {\n  private credentials: Credentials\n\n  constructor({ accessKey, secretKey, sessionToken }: { accessKey: string; secretKey: string; sessionToken?: string }) {\n    this.credentials = new Credentials({\n      accessKey,\n      secretKey,\n      sessionToken,\n    })\n  }\n\n  async getCredentials(): Promise<Credentials> {\n    return this.credentials.get()\n  }\n\n  setCredentials(credentials: Credentials) {\n    if (credentials instanceof Credentials) {\n      this.credentials = credentials\n    } else {\n      throw new Error('Unable to set Credentials. it should be an instance of Credentials class')\n    }\n  }\n\n  setAccessKey(accessKey: string) {\n    this.credentials.setAccessKey(accessKey)\n  }\n\n  getAccessKey() {\n    return this.credentials.getAccessKey()\n  }\n\n  setSecretKey(secretKey: string) {\n    this.credentials.setSecretKey(secretKey)\n  }\n\n  getSecretKey() {\n    return this.credentials.getSecretKey()\n  }\n\n  setSessionToken(sessionToken: string) {\n    this.credentials.setSessionToken(sessionToken)\n  }\n\n  getSessionToken() {\n    return this.credentials.getSessionToken()\n  }\n}\n\n// deprecated default export, please use named exports.\n// keep for backward compatibility.\n// eslint-disable-next-line import/no-default-export\nexport default CredentialProvider\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,mBAAkB;AAE9C,OAAO,MAAMC,kBAAkB,CAAC;EAG9BC,WAAWA,CAAC;IAAEC,SAAS;IAAEC,SAAS;IAAEC;EAA8E,CAAC,EAAE;IACnH,IAAI,CAACC,WAAW,GAAG,IAAIN,WAAW,CAAC;MACjCG,SAAS;MACTC,SAAS;MACTC;IACF,CAAC,CAAC;EACJ;EAEA,MAAME,cAAcA,CAAA,EAAyB;IAC3C,OAAO,IAAI,CAACD,WAAW,CAACE,GAAG,CAAC,CAAC;EAC/B;EAEAC,cAAcA,CAACH,WAAwB,EAAE;IACvC,IAAIA,WAAW,YAAYN,WAAW,EAAE;MACtC,IAAI,CAACM,WAAW,GAAGA,WAAW;IAChC,CAAC,MAAM;MACL,MAAM,IAAII,KAAK,CAAC,0EAA0E,CAAC;IAC7F;EACF;EAEAC,YAAYA,CAACR,SAAiB,EAAE;IAC9B,IAAI,CAACG,WAAW,CAACK,YAAY,CAACR,SAAS,CAAC;EAC1C;EAEAS,YAAYA,CAAA,EAAG;IACb,OAAO,IAAI,CAACN,WAAW,CAACM,YAAY,CAAC,CAAC;EACxC;EAEAC,YAAYA,CAACT,SAAiB,EAAE;IAC9B,IAAI,CAACE,WAAW,CAACO,YAAY,CAACT,SAAS,CAAC;EAC1C;EAEAU,YAAYA,CAAA,EAAG;IACb,OAAO,IAAI,CAACR,WAAW,CAACQ,YAAY,CAAC,CAAC;EACxC;EAEAC,eAAeA,CAACV,YAAoB,EAAE;IACpC,IAAI,CAACC,WAAW,CAACS,eAAe,CAACV,YAAY,CAAC;EAChD;EAEAW,eAAeA,CAAA,EAAG;IAChB,OAAO,IAAI,CAACV,WAAW,CAACU,eAAe,CAAC,CAAC;EAC3C;AACF;;AAEA;AACA;AACA;AACA,eAAef,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}