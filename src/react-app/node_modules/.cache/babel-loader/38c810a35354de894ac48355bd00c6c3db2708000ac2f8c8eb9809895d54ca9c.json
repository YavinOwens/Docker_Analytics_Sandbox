{"ast":null,"code":"const {\n  Transform\n} = require('readable-stream');\nfunction inherits(fn, sup) {\n  fn.super_ = sup;\n  fn.prototype = Object.create(sup.prototype, {\n    constructor: {\n      value: fn,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n}\n\n// create a new export function, used by both the main export and\n// the .ctor export, contains common logic for dealing with arguments\nfunction through2(construct) {\n  return (options, transform, flush) => {\n    if (typeof options === 'function') {\n      flush = transform;\n      transform = options;\n      options = {};\n    }\n    if (typeof transform !== 'function') {\n      // noop\n      transform = (chunk, enc, cb) => cb(null, chunk);\n    }\n    if (typeof flush !== 'function') {\n      flush = null;\n    }\n    return construct(options, transform, flush);\n  };\n}\n\n// main export, just make me a transform stream!\nconst make = through2((options, transform, flush) => {\n  const t2 = new Transform(options);\n  t2._transform = transform;\n  if (flush) {\n    t2._flush = flush;\n  }\n  return t2;\n});\n\n// make me a reusable prototype that I can `new`, or implicitly `new`\n// with a constructor call\nconst ctor = through2((options, transform, flush) => {\n  function Through2(override) {\n    if (!(this instanceof Through2)) {\n      return new Through2(override);\n    }\n    this.options = Object.assign({}, options, override);\n    Transform.call(this, this.options);\n    this._transform = transform;\n    if (flush) {\n      this._flush = flush;\n    }\n  }\n  inherits(Through2, Transform);\n  return Through2;\n});\nconst obj = through2(function (options, transform, flush) {\n  const t2 = new Transform(Object.assign({\n    objectMode: true,\n    highWaterMark: 16\n  }, options));\n  t2._transform = transform;\n  if (flush) {\n    t2._flush = flush;\n  }\n  return t2;\n});\nmodule.exports = make;\nmodule.exports.ctor = ctor;\nmodule.exports.obj = obj;","map":{"version":3,"names":["Transform","require","inherits","fn","sup","super_","prototype","Object","create","constructor","value","enumerable","writable","configurable","through2","construct","options","transform","flush","chunk","enc","cb","make","t2","_transform","_flush","ctor","Through2","override","assign","call","obj","objectMode","highWaterMark","module","exports"],"sources":["/Users/admin/Documents/analytical_engineering/Docker_Analytics_Sandbox/src/react-app/node_modules/through2/through2.js"],"sourcesContent":["const { Transform } = require('readable-stream')\n\nfunction inherits (fn, sup) {\n  fn.super_ = sup\n  fn.prototype = Object.create(sup.prototype, {\n    constructor: { value: fn, enumerable: false, writable: true, configurable: true }\n  })\n}\n\n// create a new export function, used by both the main export and\n// the .ctor export, contains common logic for dealing with arguments\nfunction through2 (construct) {\n  return (options, transform, flush) => {\n    if (typeof options === 'function') {\n      flush = transform\n      transform = options\n      options = {}\n    }\n\n    if (typeof transform !== 'function') {\n      // noop\n      transform = (chunk, enc, cb) => cb(null, chunk)\n    }\n\n    if (typeof flush !== 'function') {\n      flush = null\n    }\n\n    return construct(options, transform, flush)\n  }\n}\n\n// main export, just make me a transform stream!\nconst make = through2((options, transform, flush) => {\n  const t2 = new Transform(options)\n\n  t2._transform = transform\n\n  if (flush) {\n    t2._flush = flush\n  }\n\n  return t2\n})\n\n// make me a reusable prototype that I can `new`, or implicitly `new`\n// with a constructor call\nconst ctor = through2((options, transform, flush) => {\n  function Through2 (override) {\n    if (!(this instanceof Through2)) {\n      return new Through2(override)\n    }\n\n    this.options = Object.assign({}, options, override)\n\n    Transform.call(this, this.options)\n\n    this._transform = transform\n    if (flush) {\n      this._flush = flush\n    }\n  }\n\n  inherits(Through2, Transform)\n\n  return Through2\n})\n\nconst obj = through2(function (options, transform, flush) {\n  const t2 = new Transform(Object.assign({ objectMode: true, highWaterMark: 16 }, options))\n\n  t2._transform = transform\n\n  if (flush) {\n    t2._flush = flush\n  }\n\n  return t2\n})\n\nmodule.exports = make\nmodule.exports.ctor = ctor\nmodule.exports.obj = obj\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}