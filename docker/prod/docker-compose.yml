version: '3.8'

services:
  oracle:
    image: gvenzl/oracle-free:latest
    container_name: SQL_PY_Sandbox-oracle-prod
    ports:
      - "1521:1521"
    environment:
      - ORACLE_PASSWORD=${ORACLE_PASSWORD}
      - ORACLE_DATABASE=FREE
    volumes:
      - oracle_data:/opt/oracle/oradata
      - ../../../docker/oracle/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "healthcheck.sh"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - sql_py_network
    restart: unless-stopped

  minio:
    image: minio/minio
    container_name: SQL_PY_Sandbox-minio-prod
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
      - ../../../docker/minio/config:/root/.minio
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - sql_py_network
    restart: unless-stopped

volumes:
  minio_data:
    name: sql_py_sandbox_minio_data_prod
  oracle_data:
    name: sql_py_sandbox_oracle_data_prod

networks:
  sql_py_network:
    name: sql_py_sandbox_network_prod
    driver: bridge
