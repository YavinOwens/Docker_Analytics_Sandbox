{"ast":null,"code":"// wrapper an async function that support callback style API.\n// It will preserve 'this'.\nexport function callbackify(fn) {\n  return function () {\n    const args = [...arguments];\n    const callback = args.pop();\n\n    // If the last argument is a function, assume it's the callback.\n    if (typeof callback === 'function') {\n      return fn.apply(this, args).then(result => callback(null, result), err => callback(err));\n    }\n    return fn.apply(this, arguments);\n  };\n}","map":{"version":3,"names":["callbackify","fn","args","arguments","callback","pop","apply","then","result","err"],"sources":["/Users/admin/Documents/analytical_engineering/Docker_Analytics_Sandbox/src/react-app/node_modules/minio/dist/esm/internal/callbackify.js"],"sourcesContent":["// wrapper an async function that support callback style API.\n// It will preserve 'this'.\nexport function callbackify(fn) {\n  return function () {\n    const args = [...arguments]\n    const callback = args.pop()\n\n    // If the last argument is a function, assume it's the callback.\n    if (typeof callback === 'function') {\n      return fn.apply(this, args).then(\n        (result) => callback(null, result),\n        (err) => callback(err),\n      )\n    }\n\n    return fn.apply(this, arguments)\n  }\n}\n"],"mappings":"AAAA;AACA;AACA,OAAO,SAASA,WAAWA,CAACC,EAAE,EAAE;EAC9B,OAAO,YAAY;IACjB,MAAMC,IAAI,GAAG,CAAC,GAAGC,SAAS,CAAC;IAC3B,MAAMC,QAAQ,GAAGF,IAAI,CAACG,GAAG,CAAC,CAAC;;IAE3B;IACA,IAAI,OAAOD,QAAQ,KAAK,UAAU,EAAE;MAClC,OAAOH,EAAE,CAACK,KAAK,CAAC,IAAI,EAAEJ,IAAI,CAAC,CAACK,IAAI,CAC7BC,MAAM,IAAKJ,QAAQ,CAAC,IAAI,EAAEI,MAAM,CAAC,EACjCC,GAAG,IAAKL,QAAQ,CAACK,GAAG,CACvB,CAAC;IACH;IAEA,OAAOR,EAAE,CAACK,KAAK,CAAC,IAAI,EAAEH,SAAS,CAAC;EAClC,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}