FROM node:16-alpine

WORKDIR /app

# Create package.json if it doesn't exist
RUN echo '{ \
  "name": "rds-prototype-ui", \
  "version": "0.1.0", \
  "private": true, \
  "dependencies": { \
    "react": "^18.2.0", \
    "react-dom": "^18.2.0", \
    "react-scripts": "5.0.1", \
    "typescript": "^4.9.5", \
    "tailwindcss": "^2.2.19" \
  }, \
  "devDependencies": { \
    "@types/react": "^18.0.27", \
    "@types/react-dom": "^18.0.10" \
  }, \
  "scripts": { \
    "start": "react-scripts start", \
    "build": "react-scripts build", \
    "test": "react-scripts test", \
    "eject": "react-scripts eject" \
  }, \
  "browserslist": { \
    "production": [">0.2%", "not dead", "not op_mini all"], \
    "development": ["last 1 chrome version", "last 1 firefox version", "last 1 safari version"] \
  } \
}' > package.json

# Install dependencies
RUN npm install

# Create directory structure
RUN mkdir -p src/components public

# Copy the RDS UI prototype
COPY ./rds-ui-prototype.tsx src/rds-ui-prototype.tsx

# Create the index files
RUN echo 'import React from "react"; \
import ReactDOM from "react-dom/client"; \
import App from "./App"; \
\
const root = ReactDOM.createRoot(document.getElementById("root") as HTMLElement); \
\
root.render( \
  <React.StrictMode> \
    <App /> \
  </React.StrictMode> \
);' > src/index.tsx

RUN echo 'import React from "react"; \
import DatabricksUI from "./rds-ui-prototype"; \
\
function App() { \
  return ( \
    <div className="App"> \
      <DatabricksUI /> \
    </div> \
  ); \
} \
\
export default App;' > src/App.tsx

# Copy the index.html
RUN echo '<!DOCTYPE html> \
<html lang="en"> \
  <head> \
    <meta charset="utf-8" /> \
    <meta name="viewport" content="width=device-width, initial-scale=1" /> \
    <meta name="theme-color" content="#000000" /> \
    <meta name="description" content="RDS Databricks Prototype" /> \
    <title>RDS Prototype</title> \
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet"> \
  </head> \
  <body> \
    <noscript>You need to enable JavaScript to run this app.</noscript> \
    <div id="root"></div> \
  </body> \
</html>' > public/index.html

# Create a type declaration file for react
RUN echo 'declare module "*.css" { const content: { [className: string]: string }; export default content; }' > src/react-app-env.d.ts

# Add a tsconfig.json
RUN echo '{ \
  "compilerOptions": { \
    "target": "es5", \
    "lib": ["dom", "dom.iterable", "esnext"], \
    "allowJs": true, \
    "skipLibCheck": true, \
    "esModuleInterop": true, \
    "allowSyntheticDefaultImports": true, \
    "strict": true, \
    "forceConsistentCasingInFileNames": true, \
    "noFallthroughCasesInSwitch": true, \
    "module": "esnext", \
    "moduleResolution": "node", \
    "resolveJsonModule": true, \
    "isolatedModules": true, \
    "noEmit": true, \
    "jsx": "react-jsx" \
  }, \
  "include": ["src"] \
}' > tsconfig.json

# Build for production
RUN npm install -g react-scripts && npm install --save-dev @types/react @types/react-dom && react-scripts build

# Install serve to run the application
RUN npm install -g serve

# Start the application
CMD ["serve", "-s", "build", "-l", "3000"] 