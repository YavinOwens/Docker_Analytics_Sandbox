{"ast":null,"code":"const {\n  Transform\n} = require('readable-stream');\nclass Block extends Transform {\n  constructor(size, opts = {}) {\n    super(opts);\n    if (typeof size === 'object') {\n      opts = size;\n      size = opts.size;\n    }\n    this.size = size || 512;\n    const {\n      nopad,\n      zeroPadding = true\n    } = opts;\n    if (nopad) this._zeroPadding = false;else this._zeroPadding = !!zeroPadding;\n    this._buffered = [];\n    this._bufferedBytes = 0;\n  }\n  _transform(buf, enc, next) {\n    this._bufferedBytes += buf.length;\n    this._buffered.push(buf);\n    while (this._bufferedBytes >= this.size) {\n      this._bufferedBytes -= this.size;\n\n      // Assemble the buffers that will compose the final block\n      const blockBufs = [];\n      let blockBufsBytes = 0;\n      while (blockBufsBytes < this.size) {\n        const b = this._buffered.shift();\n        if (blockBufsBytes + b.length <= this.size) {\n          blockBufs.push(b);\n          blockBufsBytes += b.length;\n        } else {\n          // If the last buffer is larger than needed for the block, just\n          // use the needed part\n          const neededSize = this.size - blockBufsBytes;\n          blockBufs.push(b.slice(0, neededSize));\n          blockBufsBytes += neededSize;\n          this._buffered.unshift(b.slice(neededSize));\n        }\n      }\n\n      // Then concat just those buffers, leaving the rest untouched in _buffered\n      this.push(Buffer.concat(blockBufs, this.size));\n    }\n    next();\n  }\n  _flush() {\n    if (this._bufferedBytes && this._zeroPadding) {\n      const zeroes = Buffer.alloc(this.size - this._bufferedBytes);\n      this._buffered.push(zeroes);\n      this.push(Buffer.concat(this._buffered));\n      this._buffered = null;\n    } else if (this._bufferedBytes) {\n      this.push(Buffer.concat(this._buffered));\n      this._buffered = null;\n    }\n    this.push(null);\n  }\n}\nmodule.exports = Block;","map":{"version":3,"names":["Transform","require","Block","constructor","size","opts","nopad","zeroPadding","_zeroPadding","_buffered","_bufferedBytes","_transform","buf","enc","next","length","push","blockBufs","blockBufsBytes","b","shift","neededSize","slice","unshift","Buffer","concat","_flush","zeroes","alloc","module","exports"],"sources":["/Users/admin/Documents/analytical_engineering/Docker_Analytics_Sandbox/src/react-app/node_modules/block-stream2/index.js"],"sourcesContent":["const { Transform } = require('readable-stream')\n\nclass Block extends Transform {\n  constructor (size, opts = {}) {\n    super(opts)\n\n    if (typeof size === 'object') {\n      opts = size\n      size = opts.size\n    }\n\n    this.size = size || 512\n\n    const { nopad, zeroPadding = true } = opts\n\n    if (nopad) this._zeroPadding = false\n    else this._zeroPadding = !!zeroPadding\n\n    this._buffered = []\n    this._bufferedBytes = 0\n  }\n\n  _transform (buf, enc, next) {\n    this._bufferedBytes += buf.length\n    this._buffered.push(buf)\n\n    while (this._bufferedBytes >= this.size) {\n      this._bufferedBytes -= this.size\n\n      // Assemble the buffers that will compose the final block\n      const blockBufs = []\n      let blockBufsBytes = 0\n      while (blockBufsBytes < this.size) {\n        const b = this._buffered.shift()\n\n        if (blockBufsBytes + b.length <= this.size) {\n          blockBufs.push(b)\n          blockBufsBytes += b.length\n        } else {\n          // If the last buffer is larger than needed for the block, just\n          // use the needed part\n          const neededSize = this.size - blockBufsBytes\n          blockBufs.push(b.slice(0, neededSize))\n          blockBufsBytes += neededSize\n          this._buffered.unshift(b.slice(neededSize))\n        }\n      }\n\n      // Then concat just those buffers, leaving the rest untouched in _buffered\n      this.push(Buffer.concat(blockBufs, this.size))\n    }\n    next()\n  }\n\n  _flush () {\n    if (this._bufferedBytes && this._zeroPadding) {\n      const zeroes = Buffer.alloc(this.size - this._bufferedBytes)\n      this._buffered.push(zeroes)\n      this.push(Buffer.concat(this._buffered))\n      this._buffered = null\n    } else if (this._bufferedBytes) {\n      this.push(Buffer.concat(this._buffered))\n      this._buffered = null\n    }\n    this.push(null)\n  }\n}\n\nmodule.exports = Block\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}