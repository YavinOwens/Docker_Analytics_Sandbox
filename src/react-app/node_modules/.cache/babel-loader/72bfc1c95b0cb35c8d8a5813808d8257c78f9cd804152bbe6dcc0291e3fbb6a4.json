{"ast":null,"code":"// Browser-compatible MinIO client using fetch API\nconst MINIO_ENDPOINT = process.env.REACT_APP_MINIO_ENDPOINT || 'localhost';\nconst MINIO_PORT = process.env.REACT_APP_MINIO_PORT || '9000';\nconst MINIO_USE_SSL = process.env.REACT_APP_MINIO_USE_SSL === 'true';\n\n// For debugging\nconsole.log('MinIO Configuration:', {\n  endpoint: MINIO_ENDPOINT,\n  port: MINIO_PORT,\n  useSSL: MINIO_USE_SSL\n});\n\n// These are kept for future implementation with real MinIO integration\n// const MINIO_ACCESS_KEY = process.env.REACT_APP_MINIO_ACCESS_KEY || 'minioadmin';\n// const MINIO_SECRET_KEY = process.env.REACT_APP_MINIO_SECRET_KEY || 'minioadmin';\n// const BUCKET_NAME = process.env.REACT_APP_MINIO_BUCKET || 'repos';\n\n// API Base URL (kept for future real implementation)\n// const protocol = MINIO_USE_SSL ? 'https' : 'http';\n// const apiBaseUrl = `${protocol}://${MINIO_ENDPOINT}:${MINIO_PORT}`;\n\n// Format bytes to human-readable format\nconst formatBytes = (bytes, decimals = 2) => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n};\nexport const MinioClient = {\n  // List objects in a bucket with a prefix\n  async listObjects(prefix = '') {\n    try {\n      // For demonstration purposes, we'll use a mock implementation\n      // In a real implementation, you would use MinIO's REST API\n\n      // Simulate API request\n      await new Promise(resolve => setTimeout(resolve, 500));\n\n      // Mock response with sample data\n      const mockFiles = [{\n        name: 'test.txt',\n        path: `${prefix}test.txt`,\n        isDirectory: false,\n        size: formatBytes(18),\n        lastModified: new Date().toLocaleString()\n      }, {\n        name: 'sample_data',\n        path: `${prefix}sample_data/`,\n        isDirectory: true,\n        size: formatBytes(0),\n        lastModified: new Date().toLocaleString()\n      }, {\n        name: 'example.py',\n        path: `${prefix}example.py`,\n        isDirectory: false,\n        size: formatBytes(1024),\n        lastModified: new Date().toLocaleString()\n      }];\n\n      // If we're in a subfolder, add an option to go back\n      if (prefix) {\n        mockFiles.unshift({\n          name: '..',\n          path: prefix.split('/').slice(0, -2).join('/') + '/',\n          isDirectory: true,\n          size: formatBytes(0),\n          lastModified: ''\n        });\n      }\n      return mockFiles;\n    } catch (error) {\n      console.error('Error listing objects:', error);\n      throw error;\n    }\n  },\n  // Upload a file to MinIO\n  async uploadFile(file, path) {\n    try {\n      // Simulate upload\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      console.log(`File uploaded: ${file.name} to path: ${path}`);\n      return true;\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      throw error;\n    }\n  },\n  // Download a file from MinIO\n  async downloadFile(objectName) {\n    try {\n      // Simulate download\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      console.log(`File downloaded: ${objectName}`);\n      return {};\n    } catch (error) {\n      console.error('Error downloading file:', error);\n      throw error;\n    }\n  },\n  // Delete a file from MinIO\n  async deleteFile(objectName) {\n    try {\n      // Simulate deletion\n      await new Promise(resolve => setTimeout(resolve, 500));\n      console.log(`File deleted: ${objectName}`);\n      return true;\n    } catch (error) {\n      console.error('Error deleting file:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["MINIO_ENDPOINT","process","env","REACT_APP_MINIO_ENDPOINT","MINIO_PORT","REACT_APP_MINIO_PORT","MINIO_USE_SSL","REACT_APP_MINIO_USE_SSL","console","log","endpoint","port","useSSL","formatBytes","bytes","decimals","k","dm","sizes","i","Math","floor","parseFloat","pow","toFixed","MinioClient","listObjects","prefix","Promise","resolve","setTimeout","mockFiles","name","path","isDirectory","size","lastModified","Date","toLocaleString","unshift","split","slice","join","error","uploadFile","file","downloadFile","objectName","deleteFile"],"sources":["/Users/admin/Documents/analytical_engineering/Docker_Analytics_Sandbox/src/react-app/src/services/minioClient.js"],"sourcesContent":["// Browser-compatible MinIO client using fetch API\nconst MINIO_ENDPOINT = process.env.REACT_APP_MINIO_ENDPOINT || 'localhost';\nconst MINIO_PORT = process.env.REACT_APP_MINIO_PORT || '9000';\nconst MINIO_USE_SSL = process.env.REACT_APP_MINIO_USE_SSL === 'true';\n\n// For debugging\nconsole.log('MinIO Configuration:', {\n  endpoint: MINIO_ENDPOINT,\n  port: MINIO_PORT,\n  useSSL: MINIO_USE_SSL\n});\n\n// These are kept for future implementation with real MinIO integration\n// const MINIO_ACCESS_KEY = process.env.REACT_APP_MINIO_ACCESS_KEY || 'minioadmin';\n// const MINIO_SECRET_KEY = process.env.REACT_APP_MINIO_SECRET_KEY || 'minioadmin';\n// const BUCKET_NAME = process.env.REACT_APP_MINIO_BUCKET || 'repos';\n\n// API Base URL (kept for future real implementation)\n// const protocol = MINIO_USE_SSL ? 'https' : 'http';\n// const apiBaseUrl = `${protocol}://${MINIO_ENDPOINT}:${MINIO_PORT}`;\n\n// Format bytes to human-readable format\nconst formatBytes = (bytes, decimals = 2) => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n};\n\nexport const MinioClient = {\n  // List objects in a bucket with a prefix\n  async listObjects(prefix = '') {\n    try {\n      // For demonstration purposes, we'll use a mock implementation\n      // In a real implementation, you would use MinIO's REST API\n      \n      // Simulate API request\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      // Mock response with sample data\n      const mockFiles = [\n        {\n          name: 'test.txt',\n          path: `${prefix}test.txt`,\n          isDirectory: false,\n          size: formatBytes(18),\n          lastModified: new Date().toLocaleString(),\n        },\n        {\n          name: 'sample_data',\n          path: `${prefix}sample_data/`,\n          isDirectory: true,\n          size: formatBytes(0),\n          lastModified: new Date().toLocaleString(),\n        },\n        {\n          name: 'example.py',\n          path: `${prefix}example.py`,\n          isDirectory: false,\n          size: formatBytes(1024),\n          lastModified: new Date().toLocaleString(),\n        }\n      ];\n      \n      // If we're in a subfolder, add an option to go back\n      if (prefix) {\n        mockFiles.unshift({\n          name: '..',\n          path: prefix.split('/').slice(0, -2).join('/') + '/',\n          isDirectory: true,\n          size: formatBytes(0),\n          lastModified: '',\n        });\n      }\n      \n      return mockFiles;\n    } catch (error) {\n      console.error('Error listing objects:', error);\n      throw error;\n    }\n  },\n\n  // Upload a file to MinIO\n  async uploadFile(file, path) {\n    try {\n      // Simulate upload\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      console.log(`File uploaded: ${file.name} to path: ${path}`);\n      return true;\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      throw error;\n    }\n  },\n\n  // Download a file from MinIO\n  async downloadFile(objectName) {\n    try {\n      // Simulate download\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      console.log(`File downloaded: ${objectName}`);\n      return {};\n    } catch (error) {\n      console.error('Error downloading file:', error);\n      throw error;\n    }\n  },\n\n  // Delete a file from MinIO\n  async deleteFile(objectName) {\n    try {\n      // Simulate deletion\n      await new Promise(resolve => setTimeout(resolve, 500));\n      console.log(`File deleted: ${objectName}`);\n      return true;\n    } catch (error) {\n      console.error('Error deleting file:', error);\n      throw error;\n    }\n  },\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}