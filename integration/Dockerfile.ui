FROM node:16-alpine

WORKDIR /app

# Create package.json if it doesn't exist
RUN echo '{ \
  "name": "rds-prototype-ui", \
  "version": "0.1.0", \
  "private": true, \
  "dependencies": { \
    "react": "^18.2.0", \
    "react-dom": "^18.2.0", \
    "react-scripts": "5.0.1", \
    "typescript": "^4.9.5", \
    "tailwindcss": "^2.2.19" \
  }, \
  "scripts": { \
    "start": "react-scripts start", \
    "build": "react-scripts build", \
    "test": "react-scripts test", \
    "eject": "react-scripts eject" \
  }, \
  "browserslist": { \
    "production": [">0.2%", "not dead", "not op_mini all"], \
    "development": ["last 1 chrome version", "last 1 firefox version", "last 1 safari version"] \
  } \
}' > package.json

# Install dependencies
RUN npm install

# Create directory structure
RUN mkdir -p src/components public

# Copy the index.html
COPY ./integration/public/index.html public/
COPY ./integration/src/index.tsx src/
COPY ./integration/src/App.tsx src/
COPY ./rds-ui-prototype.tsx src/components/

# Create a type declaration file for react
RUN echo 'declare module "*.css" { const content: { [className: string]: string }; export default content; }' > src/react-app-env.d.ts

# Build for production
RUN npm install -g react-scripts && react-scripts build

# Install serve to run the application
RUN npm install -g serve

# Start the application
CMD ["serve", "-s", "build", "-l", "3000"] 